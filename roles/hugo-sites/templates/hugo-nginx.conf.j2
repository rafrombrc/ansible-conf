##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##


server {
        index index.html index.htm;
        server_name {{ d.server_name }};
	include "includes/botfilter.inc";

        # Anubis
        include "includes/conf-anubis.inc";

	listen [::]:443 ssl; # managed by Certbot
	listen 443 ssl; # managed by Certbot
	ssl_certificate /etc/letsencrypt/live/{{ d.get('cert_name', d.server_name) }}/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/{{ d.get('cert_name', d.server_name) }}/privkey.pem; # managed by Certbot
	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        access_log /var/log/nginx/{{ d.server_name }}-access.log;
        error_log /var/log/nginx/{{ d.server_name }}-error.log;
}


server {
	listen unix:/run/nginx.sock;
	server_name {{ d.server_name }};
	root {{ www_dir }}/{{ d.dir_name }};
	# First attempt to serve request as file, then
	# as directory, then fall back to displaying a 404.
 	try_files $uri $uri/ =404;

        # Get the visiting IP from the TLS termination server
        set_real_ip_from unix:;
        real_ip_header   X-Real-IP;

	{% if 'locations_template' in d %}
{% include d.locations_template %}
	{% endif %}
}

{% if 'redirects' in d %}
{% for redirect in d.redirects %}
server {
	server_name {{ redirect }};
	return 301 https://{{ d.server_name }}$request_uri;

	listen [::]:443 ssl; # managed by Certbot
	listen 443 ssl; # managed by Certbot
	ssl_certificate /etc/letsencrypt/live/{{ d.get('cert_name', d.server_name) }}/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/{{ d.get('cert_name', d.server_name) }}/privkey.pem; # managed by Certbot
	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
{% endfor %}
{% endif %}


server {
	include "includes/botfilter.inc";

    if ($host = {{ d.server_name }}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

	listen 443 ssl; # managed by Certbot

	server_name {{ d.server_name }};
	listen 80;
    return 404; # managed by Certbot
}
